{"ast":null,"code":"import _classCallCheck from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/src/componentes/App.js\";\nimport React, { Component } from 'react'; //Componentes\n\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado'; //Helpers -- nos ayudan a no tener todo revuelto\n\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helper';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  //Podemos dejar el constructor o simplemente poner:\n  // state ={.....} \n  //El state es para que solo se acualicen esos valores\n  // y no se renderice otra vez la pagina\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.cotizarSeguro = function (datos) {\n      var marca = datos.marca,\n          plan = datos.plan,\n          year = datos.year; //Agregar una base de 2000\n\n      var resultado = 2000; //Obtener la diferencia de a単os y\n\n      var diferencia = obtenerDiferenciaAnio(year); //por cada a単o restar el 3% al valor del seguro\n\n      resultado -= diferencia * 3 * resultado / 100; //Americano 15% Asiatico 5% y Europeo 30% de \n      //incremento al valor actual\n\n      resultado = calcularMarca(marca) * resultado; //el plan del auto, el basico incrementa el valor 20% y el de cobertura\n      //completa 50%\n\n      var incrementoPlan = obtenerPlan(plan); // dependiendo del plan incrementar\n\n      resultado = parseFloat(incrementoPlan * resultado).toFixed(2); //crear objeto para el resumen\n\n      var datosAuto = {\n        marca: marca,\n        plan: plan,\n        year: year //ya tenemos el costo... este el el resumen de lo que el usuario selecciono\n        // y solo se actualizan estos datos, no toda la pagina\n\n      };\n\n      _this.setState({\n        resultado: resultado,\n        datos: datosAuto\n      });\n    };\n\n    _this.state = {\n      //Vacios por default\n      resultado: '',\n      datos: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contenedor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        titulo: \"Cotizador de seguro de Auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"contenedor-formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Formulario, {\n        cotizarSeguro: this.cotizarSeguro //Este prop llegara a fomulario y de regreso recibira los datos\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Resumen, {\n        datos: this.state.datos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Resultado, {\n        resultado: this.state.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // Para darle animacion a react\n//npm install --save-dev react-transition-goup","map":{"version":3,"sources":["/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/src/componentes/App.js"],"names":["React","Component","Header","Formulario","Resumen","Resultado","obtenerDiferenciaAnio","calcularMarca","obtenerPlan","App","props","cotizarSeguro","datos","marca","plan","year","resultado","diferencia","incrementoPlan","parseFloat","toFixed","datosAuto","setState","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAEA,SAAQC,qBAAR,EAA+BC,aAA/B,EAA8CC,WAA9C,QAAgE,WAAhE;;IAEMC,G;;;;;AAEJ;AACA;AAEA;AACA;AAEA,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;;AADgB,UASlBC,aATkB,GASF,UAACC,KAAD,EAAW;AAAA,UAClBC,KADkB,GACGD,KADH,CAClBC,KADkB;AAAA,UACXC,IADW,GACGF,KADH,CACXE,IADW;AAAA,UACLC,IADK,GACGH,KADH,CACLG,IADK,EAGzB;;AACA,UAAIC,SAAS,GAAG,IAAhB,CAJyB,CAMzB;;AACA,UAAMC,UAAU,GAAGX,qBAAqB,CAACS,IAAD,CAAxC,CAPyB,CASzB;;AACAC,MAAAA,SAAS,IAAMC,UAAU,GAAG,CAAd,GAAmBD,SAApB,GAAiC,GAA9C,CAVyB,CAYzB;AACA;;AAEAA,MAAAA,SAAS,GAAGT,aAAa,CAACM,KAAD,CAAb,GAAuBG,SAAnC,CAfyB,CAiBzB;AACA;;AAEA,UAAIE,cAAc,GAAGV,WAAW,CAACM,IAAD,CAAhC,CApByB,CAsBzB;;AACAE,MAAAA,SAAS,GAAGG,UAAU,CAACD,cAAc,GAAGF,SAAlB,CAAV,CAAuCI,OAAvC,CAA+C,CAA/C,CAAZ,CAvByB,CAyBzB;;AACA,UAAMC,SAAS,GAAG;AAChBR,QAAAA,KAAK,EAAGA,KADQ;AAEhBC,QAAAA,IAAI,EAAGA,IAFS;AAGhBC,QAAAA,IAAI,EAAGA,IAHS,CAMlB;AACA;;AAPkB,OAAlB;;AASA,YAAKO,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAGA,SADA;AAEZJ,QAAAA,KAAK,EAAGS;AAFI,OAAd;AAID,KAhDiB;;AAEhB,UAAKE,KAAL,GAAa;AAAI;AACfP,MAAAA,SAAS,EAAC,EADC;AAEXJ,MAAAA,KAAK,EAAC;AAFK,KAAb;AAFgB;AAOjB;;;;6BA2CQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,6BADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAIE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACC,QAAA,aAAa,EAAI,KAAKD,aADvB,CACuC;AADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAI,KAAKY,KAAL,CAAWX,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAOE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAI,KAAKW,KAAL,CAAWP,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAJF,CADF;AAmBD;;;;EA9Eef,S;;AAiFlB,eAAeQ,GAAf,C,CAEA;AACA","sourcesContent":["import React, { Component } from 'react';\n\n//Componentes\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\n\n//Helpers -- nos ayudan a no tener todo revuelto\n\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\n\nclass App extends Component {\n\n  //Podemos dejar el constructor o simplemente poner:\n  // state ={.....} \n\n  //El state es para que solo se acualicen esos valores\n  // y no se renderice otra vez la pagina\n\n  constructor(props){ \n    super(props);\n    this.state = {   //Vacios por default\n      resultado:'',\n      datos:{}\n    }\n\n  }\n\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    //Agregar una base de 2000\n    let resultado = 2000;\n\n    //Obtener la diferencia de a単os y\n    const diferencia = obtenerDiferenciaAnio(year);\n\n    //por cada a単o restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3) * resultado) / 100;\n\n    //Americano 15% Asiatico 5% y Europeo 30% de \n    //incremento al valor actual\n\n    resultado = calcularMarca(marca) * resultado;\n\n    //el plan del auto, el basico incrementa el valor 20% y el de cobertura\n    //completa 50%\n\n    let incrementoPlan = obtenerPlan(plan);\n\n    // dependiendo del plan incrementar\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n    //crear objeto para el resumen\n    const datosAuto = {\n      marca : marca,\n      plan : plan,\n      year : year\n    }\n\n    //ya tenemos el costo... este el el resumen de lo que el usuario selecciono\n    // y solo se actualizan estos datos, no toda la pagina\n\n    this.setState({\n      resultado : resultado,\n      datos : datosAuto\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n       <Header\n         titulo='Cotizador de seguro de Auto'\n         />\n        <div className=\"contenedor-formulario\">\n          <Formulario\n           cotizarSeguro = {this.cotizarSeguro}  //Este prop llegara a fomulario y de regreso recibira los datos\n          />\n          <Resumen            \n            datos = {this.state.datos}\n          />\n          <Resultado\n            resultado = {this.state.resultado}          \n          />\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n\n// Para darle animacion a react\n//npm install --save-dev react-transition-goup\n\n"]},"metadata":{},"sourceType":"module"}