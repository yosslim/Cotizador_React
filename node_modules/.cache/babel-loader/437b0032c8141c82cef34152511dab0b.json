{"ast":null,"code":"import _classCallCheck from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/src/componentes/App.js\";\nimport React, { Component } from 'react'; //Componentes\n\nimport Header from './Header';\nimport Formulario from './Formulario'; //Helpers -- nos ayudan a no tener todo revuelto\n\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helper';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.cotizarSeguro = function (datos) {\n      var marca = datos.marca,\n          plan = datos.plan,\n          year = datos.year; //Agregar una base de 2000\n\n      var resultado = 2000; //Obtener la diferencia de a単os y\n\n      var diferencia = obtenerDiferenciaAnio(year); //por cada a単o restar el 3% al valor del seguro\n\n      resultado -= diferencia * 3 * resultado / 100; //Americano 15% Asiatico 5% y Europeo 30% de \n      //incremento al valor actual\n\n      resultado = calcularMarca(marca) * resultado; //el plan del auto, el basico incrementa el valor 20% y el de cobertura\n      //completa 50%\n\n      var incrementoPlan = obtenerPlan(plan); // dependiendo del plan incrementar\n\n      resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n      console.log(resultado);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contenedor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Header, {\n        titulo: \"Cotizador de seguro de Auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"contenedor-formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Formulario, {\n        cotizarSeguro: this.cotizarSeguro //Este prop llegara a fomulario y de regreso recibira los datos\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/yorceli/Documents/react_projects/react_principiante_a_experto_curso_udemy/cotizador/src/componentes/App.js"],"names":["React","Component","Header","Formulario","obtenerDiferenciaAnio","calcularMarca","obtenerPlan","App","cotizarSeguro","datos","marca","plan","year","resultado","diferencia","incrementoPlan","parseFloat","toFixed","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,SAAQC,qBAAR,EAA+BC,aAA/B,EAA8CC,WAA9C,QAAgE,WAAhE;;IAEMC,G;;;;;;;;;;;;;;;;;;UAEJC,a,GAAgB,UAACC,KAAD,EAAW;AAAA,UAClBC,KADkB,GACGD,KADH,CAClBC,KADkB;AAAA,UACXC,IADW,GACGF,KADH,CACXE,IADW;AAAA,UACLC,IADK,GACGH,KADH,CACLG,IADK,EAGzB;;AACA,UAAIC,SAAS,GAAG,IAAhB,CAJyB,CAMzB;;AACA,UAAMC,UAAU,GAAGV,qBAAqB,CAACQ,IAAD,CAAxC,CAPyB,CASzB;;AACAC,MAAAA,SAAS,IAAMC,UAAU,GAAG,CAAd,GAAmBD,SAApB,GAAiC,GAA9C,CAVyB,CAYzB;AACA;;AAEAA,MAAAA,SAAS,GAAGR,aAAa,CAACK,KAAD,CAAb,GAAuBG,SAAnC,CAfyB,CAiBzB;AACA;;AAEA,UAAIE,cAAc,GAAGT,WAAW,CAACK,IAAD,CAAhC,CApByB,CAsBzB;;AACAE,MAAAA,SAAS,GAAGG,UAAU,CAACD,cAAc,GAAGF,SAAlB,CAAV,CAAuCI,OAAvC,CAA+C,CAA/C,CAAZ;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAED,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,6BADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAIE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACC,QAAA,aAAa,EAAI,KAAKL,aADvB,CACuC;AADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAaD;;;;EA9CeP,S;;AAiDlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\n\n//Componentes\nimport Header from './Header';\nimport Formulario from './Formulario';\n\n//Helpers -- nos ayudan a no tener todo revuelto\n\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\n\nclass App extends Component {\n\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    //Agregar una base de 2000\n    let resultado = 2000;\n\n    //Obtener la diferencia de a単os y\n    const diferencia = obtenerDiferenciaAnio(year);\n\n    //por cada a単o restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3) * resultado) / 100;\n\n    //Americano 15% Asiatico 5% y Europeo 30% de \n    //incremento al valor actual\n\n    resultado = calcularMarca(marca) * resultado;\n\n    //el plan del auto, el basico incrementa el valor 20% y el de cobertura\n    //completa 50%\n\n    let incrementoPlan = obtenerPlan(plan);\n\n    // dependiendo del plan incrementar\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n    \n\n    console.log(resultado);\n\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n       <Header\n         titulo='Cotizador de seguro de Auto'\n         />\n        <div className=\"contenedor-formulario\">\n          <Formulario\n           cotizarSeguro = {this.cotizarSeguro}  //Este prop llegara a fomulario y de regreso recibira los datos\n          />\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}